{"uid":"19eaf9349a48227d","name":"Should be able to get Playlist","fullName":"com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist","historyId":"8a85af0803b4b604ab372af0cebaac81","time":{"start":1703466414091,"stop":1703466420332,"duration":6241},"description":"Should be able to get Playlist with correct name, description and public status","descriptionHtml":"<p>Should be able to get Playlist with correct name, description and public status</p>\n","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1703466413756,"stop":1703466413864,"duration":108},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"testStage":{"description":"Should be able to get Playlist with correct name, description and public status","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"playlistBuilder","time":{"start":1703466414148,"stop":1703466414151,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"Updated Playlist Name"},{"name":"description","value":"Updated playlist description"},{"name":"_public","value":"false"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"assertStatusCode","time":{"start":1703466420311,"stop":1703466420312,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"CODE_200"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"assertPlaylistEqual","time":{"start":1703466420329,"stop":1703466420332,"duration":3},"status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[],"attachments":[],"parameters":[{"name":"responsePlaylist","value":"Playlist(collaborative=false, description=Updated playlist description, externalUrls=com.spotify.oauth2.pojo.ExternalUrls@5994b1cf, followers=com.spotify.oauth2.pojo.Followers@11ad71ef, href=https://api.spotify.com/v1/playlists/3gPO7JGkgOrY94nU2P2g9Z, id=3gPO7JGkgOrY94nU2P2g9Z, images=null, name=Updated Playlist Name, owner=com.spotify.oauth2.pojo.Owner@5c269709, primaryColor=null, _public=true, snapshotId=NSwwY2IwZjA3MDA4YTY2NWFiYTRlMzhkNTk0OWE3OWYwMjAxNzg5Yzcz, tracks=com.spotify.oauth2.pojo.Tracks@b1def10, type=playlist, uri=spotify:playlist:3gPO7JGkgOrY94nU2P2g9Z)"},{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=Updated playlist description, externalUrls=null, followers=null, href=null, id=null, images=null, name=Updated Playlist Name, owner=null, primaryColor=null, _public=false, snapshotId=null, tracks=null, type=null, uri=null)"}],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0}],"attachments":[{"uid":"bc896ad43c6da925","name":"Request","source":"bc896ad43c6da925.html","type":"text/html","size":409},{"uid":"d5c8a5a6206763b8","name":"HTTP/1.1 200 OK","source":"d5c8a5a6206763b8.html","type":"text/html","size":1408},{"uid":"4df097ee17a386d2","name":"Request","source":"4df097ee17a386d2.html","type":"text/html","size":375},{"uid":"4247c2761813fb97","name":"HTTP/1.1 200 OK","source":"4247c2761813fb97.html","type":"text/html","size":3048}],"parameters":[],"hasContent":true,"attachmentStep":false,"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":4},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"shouldBeAvailableToGetPlaylist"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"fv-az661-160"},{"name":"thread","value":"2226@fv-az661-160.TestNG-test=Surefire test-2(21)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify OAuth 2.0"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":14,"broken":0,"skipped":0,"passed":127,"unknown":0,"total":141},"items":[{"uid":"227a34f646cd3896","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/147//#testresult/227a34f646cd3896","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703380184301,"stop":1703380188633,"duration":4332}},{"uid":"a852d97856779ad2","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/146//#testresult/a852d97856779ad2","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703293387870,"stop":1703293392081,"duration":4211}},{"uid":"247102ddaa3c5dad","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/145//#testresult/247102ddaa3c5dad","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703207098640,"stop":1703207102528,"duration":3888}},{"uid":"4413025c5f824362","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/144//#testresult/4413025c5f824362","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703120725344,"stop":1703120729927,"duration":4583}},{"uid":"a58d82b17db533d1","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/143//#testresult/a58d82b17db533d1","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703033681986,"stop":1703033685376,"duration":3390}},{"uid":"2a4c9f158ad5b403","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/142//#testresult/2a4c9f158ad5b403","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1702947993490,"stop":1702947996964,"duration":3474}},{"uid":"40b223ce724fd9d1","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/141//#testresult/40b223ce724fd9d1","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1702861667098,"stop":1702861671354,"duration":4256}},{"uid":"e5b4476bbf930fea","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/140//#testresult/e5b4476bbf930fea","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1702775478330,"stop":1702775483272,"duration":4942}},{"uid":"781c99b09651ddf2","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/139//#testresult/781c99b09651ddf2","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1702688757992,"stop":1702688761386,"duration":3394}},{"uid":"50ec5fa6f1ef4e5f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/138//#testresult/50ec5fa6f1ef4e5f","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1702602475883,"stop":1702602480145,"duration":4262}},{"uid":"84a187cb8a240708","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/137//#testresult/84a187cb8a240708","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1702515961495,"stop":1702515965080,"duration":3585}},{"uid":"334e139bbff4355a","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/136//#testresult/334e139bbff4355a","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1702429624218,"stop":1702429629358,"duration":5140}},{"uid":"d0d80a60a0bb50fb","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/135//#testresult/d0d80a60a0bb50fb","status":"passed","time":{"start":1702343251873,"stop":1702343255503,"duration":3630}},{"uid":"aa4438db645a2d56","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/134//#testresult/aa4438db645a2d56","status":"passed","time":{"start":1702256871626,"stop":1702256876487,"duration":4861}},{"uid":"ace9cbf230fbc3ac","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/133//#testresult/ace9cbf230fbc3ac","status":"passed","time":{"start":1702170672317,"stop":1702170676865,"duration":4548}},{"uid":"7e03e9be38194ffc","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/132//#testresult/7e03e9be38194ffc","status":"passed","time":{"start":1702083926394,"stop":1702083930486,"duration":4092}},{"uid":"b2762b13bc6ec7a0","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/131//#testresult/b2762b13bc6ec7a0","status":"passed","time":{"start":1701997646587,"stop":1701997651350,"duration":4763}},{"uid":"d0130f9e376d5a9f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/130//#testresult/d0130f9e376d5a9f","status":"passed","time":{"start":1701911222834,"stop":1701911227831,"duration":4997}},{"uid":"393babc8b52b3cfc","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/129//#testresult/393babc8b52b3cfc","status":"passed","time":{"start":1701824839941,"stop":1701824843477,"duration":3536}},{"uid":"2c9ae5d7a089b796","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/128//#testresult/2c9ae5d7a089b796","status":"passed","time":{"start":1701738445346,"stop":1701738449251,"duration":3905}}]},"tags":[]},"source":"19eaf9349a48227d.json","parameterValues":[]}