{"uid":"9ee8ea4b10472e9b","name":"Should be able to get Playlist","fullName":"com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist","historyId":"8a85af0803b4b604ab372af0cebaac81","time":{"start":1709859719794,"stop":1709859723177,"duration":3383},"description":"Should be able to get Playlist with correct name, description and public status","descriptionHtml":"<p>Should be able to get Playlist with correct name, description and public status</p>\n","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1709859719652,"stop":1709859719670,"duration":18},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Should be able to get Playlist with correct name, description and public status","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"playlistBuilder","time":{"start":1709859719820,"stop":1709859719831,"duration":11},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"Updated Playlist Name"},{"name":"description","value":"Updated playlist description"},{"name":"_public","value":"false"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertStatusCode","time":{"start":1709859723148,"stop":1709859723148,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"CODE_200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertPlaylistEqual","time":{"start":1709859723174,"stop":1709859723176,"duration":2},"status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[],"attachments":[],"parameters":[{"name":"responsePlaylist","value":"Playlist(collaborative=false, description=Updated playlist description, externalUrls=com.spotify.oauth2.pojo.ExternalUrls@aa0efb8, followers=com.spotify.oauth2.pojo.Followers@2cf00a4, href=https://api.spotify.com/v1/playlists/3gPO7JGkgOrY94nU2P2g9Z, id=3gPO7JGkgOrY94nU2P2g9Z, images=null, name=Updated Playlist Name, owner=com.spotify.oauth2.pojo.Owner@5304e50d, primaryColor=null, _public=true, snapshotId=NSwwY2IwZjA3MDA4YTY2NWFiYTRlMzhkNTk0OWE3OWYwMjAxNzg5Yzcz, tracks=com.spotify.oauth2.pojo.Tracks@34c9074c, type=playlist, uri=spotify:playlist:3gPO7JGkgOrY94nU2P2g9Z)"},{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=Updated playlist description, externalUrls=null, followers=null, href=null, id=null, images=null, name=Updated Playlist Name, owner=null, primaryColor=null, _public=false, snapshotId=null, tracks=null, type=null, uri=null)"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"b1ac703ecda2af59","name":"Request","source":"b1ac703ecda2af59.html","type":"text/html","size":409},{"uid":"3c2dca8c41969d3e","name":"HTTP/1.1 200 OK","source":"3c2dca8c41969d3e.html","type":"text/html","size":1408},{"uid":"c1ebecffeac59293","name":"Request","source":"c1ebecffeac59293.html","type":"text/html","size":375},{"uid":"7e132c5ccc8d2888","name":"HTTP/1.1 200 OK","source":"7e132c5ccc8d2888.html","type":"text/html","size":3048}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"shouldBeAvailableToGetPlaylist"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"fv-az1249-967"},{"name":"thread","value":"2245@fv-az1249-967.TestNG-test=Surefire test-2(21)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify OAuth 2.0"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":86,"broken":1,"skipped":0,"passed":128,"unknown":0,"total":215},"items":[{"uid":"b5047a24e0fe43f7","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/221//#testresult/b5047a24e0fe43f7","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709772726104,"stop":1709772730591,"duration":4487}},{"uid":"fa73ab98861125f5","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/220//#testresult/fa73ab98861125f5","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709686949907,"stop":1709686954465,"duration":4558}},{"uid":"96ddba93a5fb0aa1","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/219//#testresult/96ddba93a5fb0aa1","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709600516097,"stop":1709600520319,"duration":4222}},{"uid":"fa406a5fb1b3c590","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/218//#testresult/fa406a5fb1b3c590","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709514188657,"stop":1709514193224,"duration":4567}},{"uid":"f1a640355bcc57df","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/217//#testresult/f1a640355bcc57df","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709427933764,"stop":1709427938560,"duration":4796}},{"uid":"7c4bb0c086968546","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/216//#testresult/7c4bb0c086968546","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709341246227,"stop":1709341250337,"duration":4110}},{"uid":"58193fe1a20955ce","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/215//#testresult/58193fe1a20955ce","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709255287810,"stop":1709255291439,"duration":3629}},{"uid":"92e383ea86c48a1b","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/214//#testresult/92e383ea86c48a1b","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709168499581,"stop":1709168504051,"duration":4470}},{"uid":"df273c1e836122f5","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/213//#testresult/df273c1e836122f5","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709082088565,"stop":1709082093213,"duration":4648}},{"uid":"869a1977313edd1b","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/212//#testresult/869a1977313edd1b","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708995708996,"stop":1708995712518,"duration":3522}},{"uid":"2b5e5c89c1ca0d63","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/211//#testresult/2b5e5c89c1ca0d63","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708909447644,"stop":1708909451232,"duration":3588}},{"uid":"31ef81bc008c5a","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/210//#testresult/31ef81bc008c5a","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708823181058,"stop":1708823184428,"duration":3370}},{"uid":"61ba3d50b10e31b6","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/209//#testresult/61ba3d50b10e31b6","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708736382310,"stop":1708736386768,"duration":4458}},{"uid":"377492f446fedd57","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/208//#testresult/377492f446fedd57","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708650072570,"stop":1708650075983,"duration":3413}},{"uid":"e1e0d36deb09098d","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/207//#testresult/e1e0d36deb09098d","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708563715352,"stop":1708563718810,"duration":3458}},{"uid":"2dfe6709afea9313","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/206//#testresult/2dfe6709afea9313","status":"broken","statusDetails":"ABORTED!!! Renew Token failed","time":{"start":1708477380312,"stop":1708477384263,"duration":3951}},{"uid":"a148d2129a7b19f2","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/205//#testresult/a148d2129a7b19f2","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708390900678,"stop":1708390905698,"duration":5020}},{"uid":"e6f09794a56e10c9","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/204//#testresult/e6f09794a56e10c9","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708304642890,"stop":1708304649726,"duration":6836}},{"uid":"6b30dd074d1a6079","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/203//#testresult/6b30dd074d1a6079","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708218387341,"stop":1708218391469,"duration":4128}},{"uid":"2c82e3755acb58d0","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/202//#testresult/2c82e3755acb58d0","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708131737650,"stop":1708131744423,"duration":6773}}]},"tags":[]},"source":"9ee8ea4b10472e9b.json","parameterValues":[]}