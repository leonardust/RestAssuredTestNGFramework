{"uid":"a148d2129a7b19f2","name":"Should be able to get Playlist","fullName":"com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist","historyId":"8a85af0803b4b604ab372af0cebaac81","time":{"start":1708390900678,"stop":1708390905698,"duration":5020},"description":"Should be able to get Playlist with correct name, description and public status","descriptionHtml":"<p>Should be able to get Playlist with correct name, description and public status</p>\n","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1708390900387,"stop":1708390900468,"duration":81},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Should be able to get Playlist with correct name, description and public status","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"playlistBuilder","time":{"start":1708390900708,"stop":1708390900711,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"Updated Playlist Name"},{"name":"description","value":"Updated playlist description"},{"name":"_public","value":"false"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertStatusCode","time":{"start":1708390905678,"stop":1708390905678,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"CODE_200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertPlaylistEqual","time":{"start":1708390905695,"stop":1708390905698,"duration":3},"status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[],"attachments":[],"parameters":[{"name":"responsePlaylist","value":"Playlist(collaborative=false, description=Updated playlist description, externalUrls=com.spotify.oauth2.pojo.ExternalUrls@54165122, followers=com.spotify.oauth2.pojo.Followers@6dce8e00, href=https://api.spotify.com/v1/playlists/3gPO7JGkgOrY94nU2P2g9Z, id=3gPO7JGkgOrY94nU2P2g9Z, images=null, name=Updated Playlist Name, owner=com.spotify.oauth2.pojo.Owner@64559e57, primaryColor=null, _public=true, snapshotId=NSwwY2IwZjA3MDA4YTY2NWFiYTRlMzhkNTk0OWE3OWYwMjAxNzg5Yzcz, tracks=com.spotify.oauth2.pojo.Tracks@37e678a9, type=playlist, uri=spotify:playlist:3gPO7JGkgOrY94nU2P2g9Z)"},{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=Updated playlist description, externalUrls=null, followers=null, href=null, id=null, images=null, name=Updated Playlist Name, owner=null, primaryColor=null, _public=false, snapshotId=null, tracks=null, type=null, uri=null)"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"e22cf30f491afe58","name":"Request","source":"e22cf30f491afe58.html","type":"text/html","size":409},{"uid":"c2caae16b474caea","name":"HTTP/1.1 200 OK","source":"c2caae16b474caea.html","type":"text/html","size":1408},{"uid":"8d48006ae00aada","name":"Request","source":"8d48006ae00aada.html","type":"text/html","size":375},{"uid":"1cbb05bfec2580b7","name":"HTTP/1.1 200 OK","source":"1cbb05bfec2580b7.html","type":"text/html","size":3048}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"shouldBeAvailableToGetPlaylist"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"fv-az837-195"},{"name":"thread","value":"2239@fv-az837-195.TestNG-test=Surefire test-2(21)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify OAuth 2.0"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":70,"broken":0,"skipped":0,"passed":128,"unknown":0,"total":198},"items":[{"uid":"e6f09794a56e10c9","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/204//#testresult/e6f09794a56e10c9","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708304642890,"stop":1708304649726,"duration":6836}},{"uid":"6b30dd074d1a6079","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/203//#testresult/6b30dd074d1a6079","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708218387341,"stop":1708218391469,"duration":4128}},{"uid":"2c82e3755acb58d0","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/202//#testresult/2c82e3755acb58d0","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708131737650,"stop":1708131744423,"duration":6773}},{"uid":"f97672ad8e8844e","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/201//#testresult/f97672ad8e8844e","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1708045356486,"stop":1708045360311,"duration":3825}},{"uid":"f837b7e2a8fb079f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/200//#testresult/f837b7e2a8fb079f","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707958977989,"stop":1707958982238,"duration":4249}},{"uid":"7f57a1dd887cbba6","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/199//#testresult/7f57a1dd887cbba6","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707872607398,"stop":1707872613331,"duration":5933}},{"uid":"1d0493a2621420e5","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/198//#testresult/1d0493a2621420e5","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707786191783,"stop":1707786196481,"duration":4698}},{"uid":"1460a925e029a276","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/197//#testresult/1460a925e029a276","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707699788350,"stop":1707699792850,"duration":4500}},{"uid":"e385d3b0ee71b9c4","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/196//#testresult/e385d3b0ee71b9c4","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707613628397,"stop":1707613632126,"duration":3729}},{"uid":"c488bf8623d2aa63","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/195//#testresult/c488bf8623d2aa63","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707526835100,"stop":1707526838761,"duration":3661}},{"uid":"7c800d46987601b5","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/194//#testresult/7c800d46987601b5","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707440521141,"stop":1707440524750,"duration":3609}},{"uid":"a11dd740b41ddc00","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/193//#testresult/a11dd740b41ddc00","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707354110347,"stop":1707354114823,"duration":4476}},{"uid":"36e137debc7641d2","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/192//#testresult/36e137debc7641d2","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707267678913,"stop":1707267682495,"duration":3582}},{"uid":"8c6e9b8afcbdce16","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/191//#testresult/8c6e9b8afcbdce16","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707181361554,"stop":1707181366345,"duration":4791}},{"uid":"1bb4973da92f83ad","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/190//#testresult/1bb4973da92f83ad","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707095087508,"stop":1707095093304,"duration":5796}},{"uid":"592c5d04c579cee0","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/189//#testresult/592c5d04c579cee0","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707008821521,"stop":1707008825482,"duration":3961}},{"uid":"969e7458e4cb79d9","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/188//#testresult/969e7458e4cb79d9","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706922100274,"stop":1706922104550,"duration":4276}},{"uid":"de10b7ad0fdfe88c","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/187//#testresult/de10b7ad0fdfe88c","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706835772180,"stop":1706835776295,"duration":4115}},{"uid":"8e328455727af533","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/186//#testresult/8e328455727af533","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706749595728,"stop":1706749600473,"duration":4745}},{"uid":"6f12e937dee7aaf6","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/185//#testresult/6f12e937dee7aaf6","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706662991122,"stop":1706662996087,"duration":4965}}]},"tags":[]},"source":"a148d2129a7b19f2.json","parameterValues":[]}