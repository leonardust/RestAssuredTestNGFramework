{"uid":"1bb4973da92f83ad","name":"Should be able to get Playlist","fullName":"com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist","historyId":"8a85af0803b4b604ab372af0cebaac81","time":{"start":1707095087508,"stop":1707095093304,"duration":5796},"description":"Should be able to get Playlist with correct name, description and public status","descriptionHtml":"<p>Should be able to get Playlist with correct name, description and public status</p>\n","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1707095087167,"stop":1707095087280,"duration":113},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Should be able to get Playlist with correct name, description and public status","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"playlistBuilder","time":{"start":1707095087556,"stop":1707095087560,"duration":4},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"Updated Playlist Name"},{"name":"description","value":"Updated playlist description"},{"name":"_public","value":"false"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertStatusCode","time":{"start":1707095093280,"stop":1707095093280,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"CODE_200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertPlaylistEqual","time":{"start":1707095093301,"stop":1707095093303,"duration":2},"status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[],"attachments":[],"parameters":[{"name":"responsePlaylist","value":"Playlist(collaborative=false, description=Updated playlist description, externalUrls=com.spotify.oauth2.pojo.ExternalUrls@481e0272, followers=com.spotify.oauth2.pojo.Followers@55a05c2, href=https://api.spotify.com/v1/playlists/3gPO7JGkgOrY94nU2P2g9Z, id=3gPO7JGkgOrY94nU2P2g9Z, images=null, name=Updated Playlist Name, owner=com.spotify.oauth2.pojo.Owner@1650b92c, primaryColor=null, _public=true, snapshotId=NSwwY2IwZjA3MDA4YTY2NWFiYTRlMzhkNTk0OWE3OWYwMjAxNzg5Yzcz, tracks=com.spotify.oauth2.pojo.Tracks@37bc620e, type=playlist, uri=spotify:playlist:3gPO7JGkgOrY94nU2P2g9Z)"},{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=Updated playlist description, externalUrls=null, followers=null, href=null, id=null, images=null, name=Updated Playlist Name, owner=null, primaryColor=null, _public=false, snapshotId=null, tracks=null, type=null, uri=null)"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"3b341e8fd8056356","name":"Request","source":"3b341e8fd8056356.html","type":"text/html","size":409},{"uid":"267bb57b28919f19","name":"HTTP/1.1 200 OK","source":"267bb57b28919f19.html","type":"text/html","size":1408},{"uid":"acb44add77211f","name":"Request","source":"acb44add77211f.html","type":"text/html","size":375},{"uid":"aa5a72fbc2e9864d","name":"HTTP/1.1 200 OK","source":"aa5a72fbc2e9864d.html","type":"text/html","size":3048}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"shouldBeAvailableToGetPlaylist"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"fv-az847-48"},{"name":"thread","value":"2245@fv-az847-48.TestNG-test=Surefire test-2(21)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify OAuth 2.0"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":55,"broken":0,"skipped":0,"passed":128,"unknown":0,"total":183},"items":[{"uid":"592c5d04c579cee0","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/189//#testresult/592c5d04c579cee0","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1707008821521,"stop":1707008825482,"duration":3961}},{"uid":"969e7458e4cb79d9","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/188//#testresult/969e7458e4cb79d9","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706922100274,"stop":1706922104550,"duration":4276}},{"uid":"de10b7ad0fdfe88c","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/187//#testresult/de10b7ad0fdfe88c","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706835772180,"stop":1706835776295,"duration":4115}},{"uid":"8e328455727af533","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/186//#testresult/8e328455727af533","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706749595728,"stop":1706749600473,"duration":4745}},{"uid":"6f12e937dee7aaf6","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/185//#testresult/6f12e937dee7aaf6","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706662991122,"stop":1706662996087,"duration":4965}},{"uid":"f7e7e4727dec9e8f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/184//#testresult/f7e7e4727dec9e8f","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706576562862,"stop":1706576566313,"duration":3451}},{"uid":"cd4d7da1393a25a4","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/183//#testresult/cd4d7da1393a25a4","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706490210683,"stop":1706490215873,"duration":5190}},{"uid":"2cc88046048af371","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/182//#testresult/2cc88046048af371","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706404048612,"stop":1706404053027,"duration":4415}},{"uid":"3c1918d9c0b53c9b","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/181//#testresult/3c1918d9c0b53c9b","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706317330343,"stop":1706317334581,"duration":4238}},{"uid":"252b50ce5e91caf","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/180//#testresult/252b50ce5e91caf","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706231047699,"stop":1706231052274,"duration":4575}},{"uid":"94aa8b34c879accf","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/179//#testresult/94aa8b34c879accf","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706144951703,"stop":1706144955390,"duration":3687}},{"uid":"11a35343f95debca","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/178//#testresult/11a35343f95debca","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1706058575535,"stop":1706058585490,"duration":9955}},{"uid":"50f82130bb53e1a2","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/177//#testresult/50f82130bb53e1a2","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1705972141367,"stop":1705972144868,"duration":3501}},{"uid":"75e22e4857eecbf3","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/176//#testresult/75e22e4857eecbf3","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1705885860435,"stop":1705885864632,"duration":4197}},{"uid":"fb2e46d7866772cb","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/175//#testresult/fb2e46d7866772cb","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1705799573279,"stop":1705799577237,"duration":3958}},{"uid":"e4e0d2422e9de0b6","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/174//#testresult/e4e0d2422e9de0b6","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1705712825544,"stop":1705712831117,"duration":5573}},{"uid":"738e52c028a6064f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/173//#testresult/738e52c028a6064f","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1705626490934,"stop":1705626495490,"duration":4556}},{"uid":"6c0482c63057d8a1","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/172//#testresult/6c0482c63057d8a1","status":"passed","time":{"start":1705540045747,"stop":1705540049922,"duration":4175}},{"uid":"d289f205f2d830d","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/171//#testresult/d289f205f2d830d","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1705453700597,"stop":1705453706508,"duration":5911}},{"uid":"b7907df57ae4b68e","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/170//#testresult/b7907df57ae4b68e","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1705367239904,"stop":1705367243685,"duration":3781}}]},"tags":[]},"source":"1bb4973da92f83ad.json","parameterValues":[]}