{"uid":"334e139bbff4355a","name":"Should be able to get Playlist","fullName":"com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist","historyId":"8a85af0803b4b604ab372af0cebaac81","time":{"start":1702429624218,"stop":1702429629358,"duration":5140},"description":"Should be able to get Playlist with correct name, description and public status","descriptionHtml":"<p>Should be able to get Playlist with correct name, description and public status</p>\n","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1702429623914,"stop":1702429623988,"duration":74},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Should be able to get Playlist with correct name, description and public status","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"playlistBuilder","time":{"start":1702429624269,"stop":1702429624271,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"Updated Playlist Name"},{"name":"description","value":"Updated playlist description"},{"name":"_public","value":"false"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertStatusCode","time":{"start":1702429629335,"stop":1702429629335,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"CODE_200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertPlaylistEqual","time":{"start":1702429629355,"stop":1702429629357,"duration":2},"status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[],"attachments":[],"parameters":[{"name":"responsePlaylist","value":"Playlist(collaborative=false, description=Updated playlist description, externalUrls=com.spotify.oauth2.pojo.ExternalUrls@257124ee, followers=com.spotify.oauth2.pojo.Followers@126f894e, href=https://api.spotify.com/v1/playlists/3gPO7JGkgOrY94nU2P2g9Z, id=3gPO7JGkgOrY94nU2P2g9Z, images=null, name=Updated Playlist Name, owner=com.spotify.oauth2.pojo.Owner@3202512d, primaryColor=null, _public=true, snapshotId=NSwwY2IwZjA3MDA4YTY2NWFiYTRlMzhkNTk0OWE3OWYwMjAxNzg5Yzcz, tracks=com.spotify.oauth2.pojo.Tracks@16bfb67c, type=playlist, uri=spotify:playlist:3gPO7JGkgOrY94nU2P2g9Z)"},{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=Updated playlist description, externalUrls=null, followers=null, href=null, id=null, images=null, name=Updated Playlist Name, owner=null, primaryColor=null, _public=false, snapshotId=null, tracks=null, type=null, uri=null)"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"76862975511a3472","name":"Request","source":"76862975511a3472.html","type":"text/html","size":409},{"uid":"137280f4ec77e4f5","name":"HTTP/1.1 200 OK","source":"137280f4ec77e4f5.html","type":"text/html","size":1408},{"uid":"6456be72d806e19a","name":"Request","source":"6456be72d806e19a.html","type":"text/html","size":375},{"uid":"ebe3adf510720ff3","name":"HTTP/1.1 200 OK","source":"ebe3adf510720ff3.html","type":"text/html","size":3048}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"shouldBeAvailableToGetPlaylist"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"fv-az837-698"},{"name":"thread","value":"2314@fv-az837-698.TestNG-test=Surefire test-2(21)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify OAuth 2.0"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":127,"unknown":0,"total":129},"items":[{"uid":"d0d80a60a0bb50fb","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/135//#testresult/d0d80a60a0bb50fb","status":"passed","time":{"start":1702343251873,"stop":1702343255503,"duration":3630}},{"uid":"aa4438db645a2d56","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/134//#testresult/aa4438db645a2d56","status":"passed","time":{"start":1702256871626,"stop":1702256876487,"duration":4861}},{"uid":"ace9cbf230fbc3ac","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/133//#testresult/ace9cbf230fbc3ac","status":"passed","time":{"start":1702170672317,"stop":1702170676865,"duration":4548}},{"uid":"7e03e9be38194ffc","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/132//#testresult/7e03e9be38194ffc","status":"passed","time":{"start":1702083926394,"stop":1702083930486,"duration":4092}},{"uid":"b2762b13bc6ec7a0","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/131//#testresult/b2762b13bc6ec7a0","status":"passed","time":{"start":1701997646587,"stop":1701997651350,"duration":4763}},{"uid":"d0130f9e376d5a9f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/130//#testresult/d0130f9e376d5a9f","status":"passed","time":{"start":1701911222834,"stop":1701911227831,"duration":4997}},{"uid":"393babc8b52b3cfc","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/129//#testresult/393babc8b52b3cfc","status":"passed","time":{"start":1701824839941,"stop":1701824843477,"duration":3536}},{"uid":"2c9ae5d7a089b796","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/128//#testresult/2c9ae5d7a089b796","status":"passed","time":{"start":1701738445346,"stop":1701738449251,"duration":3905}},{"uid":"79723a0ecdf27649","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/127//#testresult/79723a0ecdf27649","status":"passed","time":{"start":1701652039264,"stop":1701652043023,"duration":3759}},{"uid":"6c7540babaa0944b","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/126//#testresult/6c7540babaa0944b","status":"passed","time":{"start":1701565807470,"stop":1701565812824,"duration":5354}},{"uid":"f6213252cdcc5c7e","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/125//#testresult/f6213252cdcc5c7e","status":"passed","time":{"start":1701479042486,"stop":1701479047544,"duration":5058}},{"uid":"482f342860523ee4","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/124//#testresult/482f342860523ee4","status":"passed","time":{"start":1701393160817,"stop":1701393165184,"duration":4367}},{"uid":"20da871483338c1a","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/123//#testresult/20da871483338c1a","status":"passed","time":{"start":1701306396531,"stop":1701306403602,"duration":7071}},{"uid":"dd0429666eef2a26","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/122//#testresult/dd0429666eef2a26","status":"passed","time":{"start":1701220040513,"stop":1701220045508,"duration":4995}},{"uid":"147c702f6f59c891","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/121//#testresult/147c702f6f59c891","status":"passed","time":{"start":1701133641647,"stop":1701133645923,"duration":4276}},{"uid":"5db33e0a19a72dd8","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/120//#testresult/5db33e0a19a72dd8","status":"passed","time":{"start":1701047200458,"stop":1701047205004,"duration":4546}},{"uid":"e9f2ae301bc1d3d5","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/119//#testresult/e9f2ae301bc1d3d5","status":"passed","time":{"start":1700960990456,"stop":1700960994142,"duration":3686}},{"uid":"de9604057e555904","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/118//#testresult/de9604057e555904","status":"passed","time":{"start":1700874247759,"stop":1700874254464,"duration":6705}},{"uid":"5b37df7f84dddfd4","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/117//#testresult/5b37df7f84dddfd4","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1700787911444,"stop":1700787918513,"duration":7069}},{"uid":"c9678472b505c0b5","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/116//#testresult/c9678472b505c0b5","status":"passed","time":{"start":1700701568527,"stop":1700701572473,"duration":3946}}]},"tags":[]},"source":"334e139bbff4355a.json","parameterValues":[]}