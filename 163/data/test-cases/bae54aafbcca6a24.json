{"uid":"bae54aafbcca6a24","name":"Should be able to get Playlist","fullName":"com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist","historyId":"8a85af0803b4b604ab372af0cebaac81","time":{"start":1704762471396,"stop":1704762476171,"duration":4775},"description":"Should be able to get Playlist with correct name, description and public status","descriptionHtml":"<p>Should be able to get Playlist with correct name, description and public status</p>\n","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1704762471138,"stop":1704762471215,"duration":77},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Should be able to get Playlist with correct name, description and public status","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"playlistBuilder","time":{"start":1704762471447,"stop":1704762471449,"duration":2},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"Updated Playlist Name"},{"name":"description","value":"Updated playlist description"},{"name":"_public","value":"false"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertStatusCode","time":{"start":1704762476162,"stop":1704762476162,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"CODE_200"}],"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertPlaylistEqual","time":{"start":1704762476168,"stop":1704762476171,"duration":3},"status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[],"attachments":[],"parameters":[{"name":"responsePlaylist","value":"Playlist(collaborative=false, description=Updated playlist description, externalUrls=com.spotify.oauth2.pojo.ExternalUrls@51df6d75, followers=com.spotify.oauth2.pojo.Followers@24e4fbe0, href=https://api.spotify.com/v1/playlists/3gPO7JGkgOrY94nU2P2g9Z, id=3gPO7JGkgOrY94nU2P2g9Z, images=null, name=Updated Playlist Name, owner=com.spotify.oauth2.pojo.Owner@7e1e0447, primaryColor=null, _public=true, snapshotId=NSwwY2IwZjA3MDA4YTY2NWFiYTRlMzhkNTk0OWE3OWYwMjAxNzg5Yzcz, tracks=com.spotify.oauth2.pojo.Tracks@2ed3224a, type=playlist, uri=spotify:playlist:3gPO7JGkgOrY94nU2P2g9Z)"},{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=Updated playlist description, externalUrls=null, followers=null, href=null, id=null, images=null, name=Updated Playlist Name, owner=null, primaryColor=null, _public=false, snapshotId=null, tracks=null, type=null, uri=null)"}],"stepsCount":0,"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"993df5ade2a9c697","name":"Request","source":"993df5ade2a9c697.html","type":"text/html","size":409},{"uid":"80703bd18cb8df58","name":"HTTP/1.1 200 OK","source":"80703bd18cb8df58.html","type":"text/html","size":1408},{"uid":"357637df822f471f","name":"Request","source":"357637df822f471f.html","type":"text/html","size":375},{"uid":"7872fdb03c87e609","name":"HTTP/1.1 200 OK","source":"7872fdb03c87e609.html","type":"text/html","size":3048}],"parameters":[],"stepsCount":3,"shouldDisplayMessage":false,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"shouldBeAvailableToGetPlaylist"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"fv-az1152-639"},{"name":"thread","value":"2213@fv-az1152-639.TestNG-test=Surefire test-2(21)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify OAuth 2.0"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":127,"unknown":0,"total":156},"items":[{"uid":"ed5afa90bbb7ac31","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/162//#testresult/ed5afa90bbb7ac31","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704676080294,"stop":1704676083488,"duration":3194}},{"uid":"efbf7fd97ffb2036","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/161//#testresult/efbf7fd97ffb2036","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704589936521,"stop":1704589940358,"duration":3837}},{"uid":"494d0d36ff6e0a22","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/160//#testresult/494d0d36ff6e0a22","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704503132064,"stop":1704503135422,"duration":3358}},{"uid":"c6567c69a6e03e0f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/159//#testresult/c6567c69a6e03e0f","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704416797833,"stop":1704416802389,"duration":4556}},{"uid":"6f9d1e1861da0cc0","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/158//#testresult/6f9d1e1861da0cc0","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704330370454,"stop":1704330374829,"duration":4375}},{"uid":"a9b39d45e71292a8","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/157//#testresult/a9b39d45e71292a8","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704243956427,"stop":1704243959963,"duration":3536}},{"uid":"40007ea1fa77ab17","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/156//#testresult/40007ea1fa77ab17","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704157486547,"stop":1704157491479,"duration":4932}},{"uid":"300a4487f1c90302","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/155//#testresult/300a4487f1c90302","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1704071509064,"stop":1704071512396,"duration":3332}},{"uid":"1a82e98b972e4f46","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/154//#testresult/1a82e98b972e4f46","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703985032667,"stop":1703985037941,"duration":5274}},{"uid":"e203972ba061d6f4","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/153//#testresult/e203972ba061d6f4","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703898244160,"stop":1703898249813,"duration":5653}},{"uid":"18ca561e5c5efa8a","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/152//#testresult/18ca561e5c5efa8a","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703811334165,"stop":1703811339409,"duration":5244}},{"uid":"64dfd6dd0b115ae","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/151//#testresult/64dfd6dd0b115ae","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703725438907,"stop":1703725442461,"duration":3554}},{"uid":"6b2818883a074443","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/150//#testresult/6b2818883a074443","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703639052792,"stop":1703639056469,"duration":3677}},{"uid":"66833860606b4d71","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/149//#testresult/66833860606b4d71","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703552641052,"stop":1703552645327,"duration":4275}},{"uid":"19eaf9349a48227d","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/148//#testresult/19eaf9349a48227d","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703466414091,"stop":1703466420332,"duration":6241}},{"uid":"227a34f646cd3896","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/147//#testresult/227a34f646cd3896","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703380184301,"stop":1703380188633,"duration":4332}},{"uid":"a852d97856779ad2","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/146//#testresult/a852d97856779ad2","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703293387870,"stop":1703293392081,"duration":4211}},{"uid":"247102ddaa3c5dad","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/145//#testresult/247102ddaa3c5dad","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703207098640,"stop":1703207102528,"duration":3888}},{"uid":"4413025c5f824362","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/144//#testresult/4413025c5f824362","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703120725344,"stop":1703120729927,"duration":4583}},{"uid":"a58d82b17db533d1","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/143//#testresult/a58d82b17db533d1","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1703033681986,"stop":1703033685376,"duration":3390}}]},"tags":[]},"source":"bae54aafbcca6a24.json","parameterValues":[]}