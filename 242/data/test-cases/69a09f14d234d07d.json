{"uid":"69a09f14d234d07d","name":"Should be able to get Playlist","fullName":"com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist","historyId":"8a85af0803b4b604ab372af0cebaac81","time":{"start":1711587797744,"stop":1711587802070,"duration":4326},"description":"Should be able to get Playlist with correct name, description and public status","descriptionHtml":"<p>Should be able to get Playlist with correct name, description and public status</p>\n","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"beforeMethod","time":{"start":1711587797550,"stop":1711587797582,"duration":32},"description":"","status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"Should be able to get Playlist with correct name, description and public status","status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[{"name":"playlistBuilder","time":{"start":1711587797793,"stop":1711587797798,"duration":5},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"name","value":"Updated Playlist Name"},{"name":"description","value":"Updated playlist description"},{"name":"_public","value":"false"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertStatusCode","time":{"start":1711587802050,"stop":1711587802050,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"actualStatusCode","value":"200"},{"name":"expectedStatusCode","value":"CODE_200"}],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"assertPlaylistEqual","time":{"start":1711587802067,"stop":1711587802070,"duration":3},"status":"failed","statusMessage":"\nExpected: <false>\n     but: was <true>","statusTrace":"java.lang.AssertionError: \nExpected: <false>\n     but: was <true>\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6)\n\tat com.spotify.oauth2.tests.PlaylistTests.assertPlaylistEqual(PlaylistTests.java:43)\n\tat com.spotify.oauth2.tests.PlaylistTests.shouldBeAvailableToGetPlaylist(PlaylistTests.java:90)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n\tat java.base/java.lang.Thread.run(Thread.java:840)\n","steps":[],"attachments":[],"parameters":[{"name":"responsePlaylist","value":"Playlist(collaborative=false, description=Updated playlist description, externalUrls=com.spotify.oauth2.pojo.ExternalUrls@387b2b4c, followers=com.spotify.oauth2.pojo.Followers@8f20031, href=https://api.spotify.com/v1/playlists/3gPO7JGkgOrY94nU2P2g9Z, id=3gPO7JGkgOrY94nU2P2g9Z, images=null, name=Updated Playlist Name, owner=com.spotify.oauth2.pojo.Owner@e46988d, primaryColor=null, _public=true, snapshotId=NSwwY2IwZjA3MDA4YTY2NWFiYTRlMzhkNTk0OWE3OWYwMjAxNzg5Yzcz, tracks=com.spotify.oauth2.pojo.Tracks@169e39ca, type=playlist, uri=spotify:playlist:3gPO7JGkgOrY94nU2P2g9Z)"},{"name":"requestPlaylist","value":"Playlist(collaborative=null, description=Updated playlist description, externalUrls=null, followers=null, href=null, id=null, images=null, name=Updated Playlist Name, owner=null, primaryColor=null, _public=false, snapshotId=null, tracks=null, type=null, uri=null)"}],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"bc776ec4205770f8","name":"Request","source":"bc776ec4205770f8.html","type":"text/html","size":409},{"uid":"cf65de2ccc6e5e4c","name":"HTTP/1.1 200 OK","source":"cf65de2ccc6e5e4c.html","type":"text/html","size":1408},{"uid":"e6d0c045400cd9bf","name":"Request","source":"e6d0c045400cd9bf.html","type":"text/html","size":375},{"uid":"38a34dbc297f4065","name":"HTTP/1.1 200 OK","source":"38a34dbc297f4065.html","type":"text/html","size":3048}],"parameters":[],"shouldDisplayMessage":false,"stepsCount":3,"attachmentsCount":4,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"package","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testClass","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"testMethod","value":"shouldBeAvailableToGetPlaylist"},{"name":"parentSuite","value":"Surefire suite"},{"name":"suite","value":"Surefire test"},{"name":"subSuite","value":"com.spotify.oauth2.tests.PlaylistTests"},{"name":"host","value":"fv-az698-201"},{"name":"thread","value":"2274@fv-az698-201.TestNG-test=Surefire test-2(21)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"},{"name":"feature","value":"Playlist API"},{"name":"epic","value":"Spotify OAuth 2.0"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":106,"broken":1,"skipped":0,"passed":128,"unknown":0,"total":235},"items":[{"uid":"4751fef815583bc8","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/241//#testresult/4751fef815583bc8","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1711501374417,"stop":1711501379377,"duration":4960}},{"uid":"4c7b11ec6f69dea5","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/240//#testresult/4c7b11ec6f69dea5","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1711414973655,"stop":1711414978363,"duration":4708}},{"uid":"1fc195ae5e6f76eb","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/239//#testresult/1fc195ae5e6f76eb","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1711328692484,"stop":1711328696171,"duration":3687}},{"uid":"745f5a76c171ef49","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/238//#testresult/745f5a76c171ef49","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1711242540765,"stop":1711242545283,"duration":4518}},{"uid":"953b962b5f4a5067","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/237//#testresult/953b962b5f4a5067","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1711155682509,"stop":1711155686057,"duration":3548}},{"uid":"d30a46ccab4e3319","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/236//#testresult/d30a46ccab4e3319","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1711069355646,"stop":1711069359116,"duration":3470}},{"uid":"cbaaa3cb1dbe377f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/235//#testresult/cbaaa3cb1dbe377f","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710983048641,"stop":1710983053228,"duration":4587}},{"uid":"1c230a8d9f1d1445","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/234//#testresult/1c230a8d9f1d1445","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710896525314,"stop":1710896528895,"duration":3581}},{"uid":"e577021e9e82634d","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/233//#testresult/e577021e9e82634d","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710810182103,"stop":1710810186790,"duration":4687}},{"uid":"e2285929ef91c7fd","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/232//#testresult/e2285929ef91c7fd","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710723823800,"stop":1710723828053,"duration":4253}},{"uid":"3662cbc46235f09e","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/231//#testresult/3662cbc46235f09e","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710637598565,"stop":1710637603216,"duration":4651}},{"uid":"e3223d29ab92bb77","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/230//#testresult/e3223d29ab92bb77","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710550882357,"stop":1710550886686,"duration":4329}},{"uid":"639a4a32ea65c77c","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/229//#testresult/639a4a32ea65c77c","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710464591178,"stop":1710464595852,"duration":4674}},{"uid":"8d9e39f2507d5431","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/228//#testresult/8d9e39f2507d5431","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710378153331,"stop":1710378157882,"duration":4551}},{"uid":"269a2c3ee64fba01","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/227//#testresult/269a2c3ee64fba01","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710291820859,"stop":1710291824975,"duration":4116}},{"uid":"614d398c7ed0761","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/226//#testresult/614d398c7ed0761","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710205321606,"stop":1710205325868,"duration":4262}},{"uid":"dd76fa39c411e5e7","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/225//#testresult/dd76fa39c411e5e7","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710119005658,"stop":1710119009188,"duration":3530}},{"uid":"66f9cc149cf0d14f","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/224//#testresult/66f9cc149cf0d14f","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1710032796446,"stop":1710032802422,"duration":5976}},{"uid":"fd7e047ab68bdd23","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/223//#testresult/fd7e047ab68bdd23","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709946001106,"stop":1709946005331,"duration":4225}},{"uid":"9ee8ea4b10472e9b","reportUrl":"https://leonardust.github.io/RestAssuredTestNGFramework/222//#testresult/9ee8ea4b10472e9b","status":"failed","statusDetails":"\nExpected: <false>\n     but: was <true>","time":{"start":1709859719794,"stop":1709859723177,"duration":3383}}]},"tags":[]},"source":"69a09f14d234d07d.json","parameterValues":[]}